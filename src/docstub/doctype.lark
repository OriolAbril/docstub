?start : type_description

type_description : type (("or" | "|") type)* ("," optional)? ("," extra_info)?

?type : qualname
      | "{" literal ("," literal)* "}"
      | shape_n_dtype

extra_info : /[^\r\n]+/

optional : "optional"
         | "default" ("=" | ":") literal

// Name with leading dot separated path
qualname : (NAME ".")* NAME contains?


contains: "[" type ("," type)* "]"


// Numeric
shape_n_dtype : shape? ARRAY_NAME ("of" dtype)?
              | shape? ARRAY_NAME "of" dtype
              | shape dtype ARRAY_NAME
              | dtype ARRAY_NAME
              | ARRAY_NAME "of shape" shape ("and dtype" dtype)?
              | ARRAY_NAME "of dtype" dtype ("and shape" shape)?
ARRAY_NAME : "array"
           | "ndarray"
           | "array-like"
           | "array_like"
dtype : NAME
shape : "(" dim ",)"
      | "(" leading_optional? dim (("," dim | insert_optional))* ")"
      | NUMBER "-"? "D"
leading_optional : "[" dim ("," dim)* ",]" -> optional
insert_optional : "[," dim ("," dim)* "]" -> optional
?dim : NUMBER
     | PY_ELLIPSES
     | NAME


// Python

PY_TRUE : "True"
PY_FALSE : "False"
PY_NONE : "None"
PY_ELLIPSES : "..."

literal : PY_TRUE
        | PY_FALSE
        | PY_NONE
        | PY_ELLIPSES
        | STRING
        | NUMBER
        | NAME


// imports
%import python (STRING, NAME)
%import common (NEWLINE, NUMBER, LETTER, TEXT, WS)

%ignore WS
